{"version":3,"sources":["fabafLogo.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","props","react_default","a","createElement","className","src","LogoFile","alt","ContentHeader","App_Logo","data","name","first","last","position","ContentMainSummary","summary","ExperiencePositions","company","positions","location","map","index","key","period","years","responsibilities","resp","ContentMainExperience","experience","App_ExperiencePositions","ContentMainEducation","ContentMain","App_ContentMainSummary","App_ContentMainExperience","App_ContentMainEducation","ContentFooter","href","SidebarHeader","SkillsList","skills","value","LanguageList","languages","language","proficiency","SidebarMain","App_SkillsList","App_LanguageList","SectionContent","App_ContentHeader","App_ContentMain","App_ContentFooter","SectionSidebar","App_SidebarHeader","App_SidebarMain","AppRoot","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","DataFile","App_SectionContent","App_SectionSidebar","Component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"siFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6RCQlCC,EAAO,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAUC,IAAI,gCAKxBC,EAAgB,SAACR,GACrB,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACM,EAAD,MAAJ,IAAaR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQJ,EAAMU,KAAKC,KAAKC,MAAxC,IAAgDZ,EAAMU,KAAKC,KAAKE,OAC7EZ,EAAAC,EAAAC,cAAA,UAAKH,EAAMU,KAAKI,YAKlBC,EAAqB,SAACf,GAC1B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIH,EAAMgB,WAMRC,EAAsB,SAACjB,GAC3B,IAAMkB,EAAUlB,EAAMkB,QAChBC,EAAYD,EAAQC,UAE1B,OACAlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWc,EAAQA,QAAjC,KAA4CA,EAAQE,UACnDD,EAAUE,IAAI,SAACP,EAAUQ,GAAX,OACbrB,EAAAC,EAAAC,cAAA,OAAKoB,IAAKD,EAAOlB,UAAU,iBACzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUU,EAASU,QAAvC,IAAsDvB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYU,EAASA,UAA7F,IAAoI,MAAlBA,EAASW,MAAgB,GAAMxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASU,EAASW,QACnLxB,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACbU,EAASY,iBAAiBL,IAAK,SAACM,EAAML,GAAP,OAC9BrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,GAAQK,YAUrBC,EAAwB,SAAC5B,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,wBACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZJ,EAAM6B,WAAWR,IAAI,SAACH,EAASI,GAAV,OACpBrB,EAAAC,EAAAC,cAAC2B,EAAD,CAAqBP,IAAKD,EAAOJ,QAASA,SAOhDa,EAAuB,SAAC/B,GAC5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,iEAMF6B,EAAc,SAAChC,GACnB,OACEC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC8B,EAAD,CAAoBjB,QAAShB,EAAMU,KAAKM,UACxCf,EAAAC,EAAAC,cAAC+B,EAAD,CAAuBL,WAAY7B,EAAMU,KAAKmB,aAC9C5B,EAAAC,EAAAC,cAACgC,EAAD,QAKFC,EAAgB,SAACpC,GACrB,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGkC,KAAK,oCAAoCjC,UAAU,YAAtD,aACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGkC,KAAK,8CAA8CjC,UAAU,YAAWH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAxF,kBAORkC,EAAgB,SAACtC,GACrB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGkC,KAAK,+CAAR,qCAKHE,EAAa,SAACvC,GAClB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAEVJ,EAAMwC,OAAOnB,IAAI,SAACoB,EAAOnB,GAAR,OACjBrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,GACPrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcqC,QAOlCC,EAAe,SAAC1C,GACpB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAEVJ,EAAM2C,UAAUtB,IAAI,SAACoB,EAAOnB,GAAR,OACpBrB,EAAAC,EAAAC,cAAA,MAAIoB,IAAKD,GACPrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaqC,EAAMG,UACnC3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BqC,EAAMI,kBAOxCC,EAAc,SAAC9C,GACnB,OACEC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAC4C,EAAD,CAAYP,OAAQxC,EAAMU,KAAK8B,SAC/BvC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC6C,EAAD,CAAcL,UAAW3C,EAAMU,KAAKiC,cAKtCM,EAAiB,SAACjD,GACtB,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,qBACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAC+C,EAAD,CAAexC,KAAMV,EAAMU,OAC3BT,EAAAC,EAAAC,cAACgD,EAAD,CAAazC,KAAMV,EAAMU,OACzBT,EAAAC,EAAAC,cAACiD,EAAD,CAAe1C,KAAMV,EAAMU,UAM3B2C,EAAiB,SAACrD,GACtB,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,CAAa7C,KAAMV,EAAMU,SAyBhB8C,cAlBb,SAAAA,EAAYxD,GAAO,IAAAyD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM5D,KAEDgE,MAAQ,CACXC,YAJeR,wEASjB,OACExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC+D,EAAD,CAAgBxD,KAAMuD,EAASvD,OAC/BT,EAAAC,EAAAC,cAACgE,EAAD,CAAgBzD,KAAMuD,EAASvD,eAbjB0D,aCpKFC,QACW,cAA7BC,OAAOlD,SAASmD,UAEe,UAA7BD,OAAOlD,SAASmD,UAEhBD,OAAOlD,SAASmD,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9066cdd3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fabafLogo.9c941a24.png\";","import React, { Component } from 'react';\r\nimport './normalize.css';\r\nimport './App.css';\r\nimport LogoFile from './fabafLogo.png';\r\nimport DataFile from './data.json';\r\n\r\n\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <span className=\"logo\">\r\n      <img src={LogoFile} alt=\"Greg Carvalhal FABAF logo\"/>\r\n    </span>\r\n  );\r\n};\r\n\r\nconst ContentHeader = (props) => {\r\n  return (\r\n      <header className=\"header-main\">\r\n        <h1><Logo /> <span className=\"text\">{props.data.name.first} {props.data.name.last}</span></h1>\r\n        <h2>{props.data.position}</h2>\r\n      </header>\r\n  );\r\n};\r\n\r\nconst ContentMainSummary = (props) => {\r\n  return(\r\n    <div className=\"summary section\">\r\n    <h2>Summary</h2>\r\n    <p>{props.summary}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst ExperiencePositions = (props) => {\r\n  const company = props.company;\r\n  const positions = company.positions;\r\n  \r\n  return(\r\n  <div className=\"row company-wrapper\">\r\n    <h3 className=\"company\">{company.company}, {company.location}</h3>\r\n    {positions.map((position, index) =>\r\n      <div key={index} className=\"position card\">\r\n        <div className=\"card-content\">\r\n        <h4><span className=\"period\">{position.period}</span> <strong className=\"pos-name\">{position.position}</strong> {(position.years == null ? \"\" :  <span className=\"years\">{position.years}</span>)}</h4>\r\n        <h5>Responsibilities</h5>\r\n        <ul className=\"responsibilities\">\r\n        {position.responsibilities.map( (resp, index) => \r\n          <li key={index}>{resp}</li>\r\n         )}\r\n         </ul>\r\n         </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n  )\r\n}\r\n\r\nconst ContentMainExperience = (props) => {\r\n  return(\r\n    <div className=\"experience section\">\r\n      <h2>Experience</h2>\r\n        <div className=\"experience-wrapper\">\r\n          {props.experience.map((company, index) =>\r\n            <ExperiencePositions key={index} company={company}/>\r\n          )}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ContentMainEducation = (props) => {\r\n  return(\r\n    <div className=\"education section\">\r\n      <h2>Education</h2>\r\n      <ul>\r\n        <li>Concordia University, Fine Art Â· (1997 - 2000)</li>\r\n        <li>Class Afloat - West Island College International</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ContentMain = (props) => {\r\n  return(\r\n    <main>\r\n        <ContentMainSummary summary={props.data.summary} />\r\n        <ContentMainExperience experience={props.data.experience}/>\r\n        <ContentMainEducation />\r\n    </main>\r\n  );\r\n};\r\n\r\nconst ContentFooter = (props) => {\r\n  return (\r\n    <footer>\r\n      <div className=\"social\">\r\n        <ul>\r\n          <li><a href=\"https://www.facebook.com/gregcarv\" className=\"soc-link\">Facebook</a></li>\r\n          <li><a href=\"https://www.linkedin.com/in/greg-carvalhal/\" className=\"soc-link\"><i className=\"fab fa-linkedin\"></i> linkedin</a></li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nconst SidebarHeader = (props) => {\r\n  return (\r\n    <header className=\"header-side\">\r\n      <h1>Contact</h1>\r\n      <p><a href=\"https://www.linkedin.com/in/greg-carvalhal/\">linkedin.com/in/greg-carvalhal</a></p>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst SkillsList = (props) => {\r\n  return (\r\n    <ul className=\"skills-list\">\r\n      {\r\n        props.skills.map((value, index) => \r\n        <li key={index}>\r\n          <span className=\"skill-name\">{value}</span>\r\n          </li>\r\n        )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst LanguageList = (props) => {\r\n  return (\r\n    <ul className=\"languages-list\">\r\n      {\r\n        props.languages.map((value, index) => \r\n        <li key={index}>\r\n          <span className=\"lang-name\">{value.language}</span>\r\n          <span className=\"lang-prof\"> {value.proficiency}</span>\r\n          </li>\r\n        )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst SidebarMain = (props) => {\r\n  return (\r\n    <main>\r\n        <h2>Top Skills</h2>\r\n        <SkillsList skills={props.data.skills}/>\r\n        <h2>Languages</h2>\r\n        <LanguageList languages={props.data.languages}/>\r\n      </main>\r\n  )\r\n}\r\n\r\nconst SectionContent = (props) => {\r\n  return (\r\n    <section className=\"content container\">\r\n      <div className=\"content-inner\">\r\n      <ContentHeader data={props.data}/>\r\n      <ContentMain data={props.data}/>\r\n      <ContentFooter data={props.data}/>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst SectionSidebar = (props) => {\r\n  return (\r\n    <section className=\"sidebar\">\r\n      <SidebarHeader />\r\n      <SidebarMain data={props.data}/>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nclass AppRoot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      DataFile,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"approot\">\r\n        <SectionContent data={DataFile.data} />\r\n        <SectionSidebar data={DataFile.data} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AppRoot;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
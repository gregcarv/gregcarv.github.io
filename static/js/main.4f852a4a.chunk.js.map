{"version":3,"sources":["static/fabafLogo.png","static/Greg_Carvalhal_CV_Frontend_Developer_2023.pdf","static/Gregory_Carvalhal_Recommendation_CaribMedia_2019.pdf","components/Logo.js","components/ContentHeader.js","components/ContentMainSummary.js","components/HighLights.js","components/CompanyLinks.js","components/ExperiencePositions.js","components/ContentMainExperience.js","components/ContentMainEducation.js","components/ContentMain.js","components/SectionContent.js","components/SidebarHeader.js","components/SkillsList.js","components/ToolsList.js","components/StrengthsList.js","components/LanguageList.js","components/SidebarMain.js","components/SectionSidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","props","react_default","a","createElement","className","src","LogoFile","alt","ContentHeader","Logo_Logo","data","name","first","last","position","rel","target","href","CV","letterRec","ContentMainSummary","summary","HighLights","highlights","company","length","map","highlight","index","key","CompanyLinks","links","link","linkText","ExperiencePositions","positions","location","period","years","responsibilities","resp","HighLights_HighLights","CompanyLinks_CompanyLinks","ContentMainExperience","experience","ExperiencePositions_ExperiencePositions","ContentMainEducation","ContentMain","ContentMainSummary_ContentMainSummary","ContentMainExperience_ContentMainExperience","ContentMainEducation_ContentMainEducation","SectionContent","ContentHeader_ContentHeader","ContentMain_ContentMain","SidebarHeader","contact","Location","social","value","site","title","url","SkillsList","skills","ToolsList","tools","StrengthsList","strengths","LanguageList","languages","language","proficiency","SidebarMain","SkillsList_SkillsList","ToolsList_ToolsList","StrengthsList_StrengthsList","LanguageList_LanguageList","SectionSidebar","SidebarHeader_SidebarHeader","SidebarMain_SidebarMain","AppRoot","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","DataFile","inherits","createClass","SectionContent_SectionContent","SectionSidebar_SectionSidebar","Component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f852a4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fabafLogo.2ecf42ac.png\";","module.exports = __webpack_public_path__ + \"static/media/Greg_Carvalhal_CV_Frontend_Developer_2023.a30def1b.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Gregory_Carvalhal_Recommendation_CaribMedia_2019.3fc5d274.pdf\";","import React from \"react\";\nimport LogoFile from \"../static/fabafLogo.png\";\n\nexport const Logo = (props) => {\n  return (\n    <span className=\"logo\">\n      <img src={LogoFile} alt=\"Greg Carvalhal FABAF logo\" />\n    </span>\n  );\n};\n","import React from \"react\";\nimport { Logo } from \"./Logo\";\nimport CV from \"../static/Greg_Carvalhal_CV_Frontend_Developer_2023.pdf\";\nimport letterRec from \"../static/Gregory_Carvalhal_Recommendation_CaribMedia_2019.pdf\";\n\nexport const ContentHeader = (props) => {\n  return (\n    <header className=\"header-main\">\n      <h1>\n        <Logo />{\" \"}\n        <span className=\"text\">\n          {props.data.name.first} {props.data.name.last}\n        </span>\n      </h1>\n      <h2>{props.data.position}</h2>\n      <p>\n        <a rel=\"noreferrer noopener\" target=\"_blank\" href={CV}>\n          Download CV\n        </a>{\" \"}\n        |{\" \"}\n        <a rel=\"noreferrer noopener\" target=\"_blank\" href={letterRec}>\n          View recommendation\n        </a>\n      </p>\n    </header>\n  );\n};\n","import React from \"react\";\n\nexport const ContentMainSummary = (props) => {\n  return (\n    <div className=\"summary section\">\n      <h2>Summary</h2>\n      <p>{props.summary}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const HighLights = (props) => {\n  const company = props.company;\n  const highlights = company.highlights;\n  const hasHighLights = highlights.length > 0;\n\n  if (hasHighLights) {\n    return (\n      <div className=\"highlight card\">\n        <h3>Highlights & Achievements</h3>\n        <ul>\n          {highlights.map((highlight, index) => (\n            <li key={index}>{highlight}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\n\nexport const CompanyLinks = (props) => {\n  const company = props.company;\n  const links = company.links;\n  const hasLinks = links.length > 0;\n\n  if (hasLinks) {\n    return (\n      <div className=\"company-links card\">\n        <h3>Links to favorite projects</h3>\n        <ul>\n          {links.map((link, index) => (\n            <li>\n              <a key={index} href={link.link}>\n                {link.linkText}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\nimport { HighLights } from \"./HighLights\";\nimport { CompanyLinks } from \"./CompanyLinks\";\n\nexport const ExperiencePositions = (props) => {\n  const company = props.company;\n  const positions = company.positions;\n\n  return (\n    <div className=\"row company-wrapper\">\n      <h3 className=\"company\">\n        {company.company}, {company.location}\n      </h3>\n      {positions.map((position, index) => (\n        <div key={index} className=\"position card\">\n          <div className=\"card-content\">\n            <h4>\n              <span className=\"period\">{position.period}</span>{\" \"}\n              <strong className=\"pos-name\">{position.position}</strong>{\" \"}\n              {position.years == null ? (\n                \"\"\n              ) : (\n                <span className=\"years\">{position.years}</span>\n              )}\n            </h4>\n            <ul className=\"responsibilities\">\n              {position.responsibilities.map((resp, index) => (\n                <li key={index}>{resp}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      ))}\n\n      <HighLights key={company} company={company} />\n      <CompanyLinks key={company} company={company} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ExperiencePositions } from \"./ExperiencePositions\";\n\nexport const ContentMainExperience = (props) => {\n  return (\n    <div className=\"experience section\">\n      <h2>Experience</h2>\n      <div className=\"experience-wrapper\">\n        {props.experience.map((company, index) => (\n          <ExperiencePositions key={index} company={company} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ContentMainEducation = (props) => {\n  return <div className=\"education section\"></div>;\n};\n","import React from \"react\";\nimport { ContentMainSummary } from \"./ContentMainSummary\";\nimport { ContentMainExperience } from \"./ContentMainExperience\";\nimport { ContentMainEducation } from \"./ContentMainEducation\";\n\nexport const ContentMain = (props) => {\n  return (\n    <main>\n      <ContentMainSummary summary={props.data.summary} />\n      <ContentMainExperience experience={props.data.experience} />\n      <ContentMainEducation />\n    </main>\n  );\n};\n","import React from \"react\";\nimport { ContentHeader } from \"./ContentHeader\";\nimport { ContentMain } from \"./ContentMain\";\n\nexport const SectionContent = (props) => {\n  return (\n    <section className=\"content container\">\n      <div className=\"content-inner\">\n        <ContentHeader data={props.data} />\n        <ContentMain data={props.data} />\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\n\nexport const SidebarHeader = (props) => {\n  return (\n    <header className=\"header-side\">\n      <h1>Contact</h1>\n      <p className=\"contact-list\">\n        <span>\n          <span className=\"label\">Location:</span>{\" \"}\n          <span className=\"value\">{props.contact.Location}</span>\n        </span>\n        {props.contact.social.map((value, index) => (\n          <span key={index} className=\"social-link\">\n            <span className=\"label\">{value.site}:</span>{\" \"}\n            <a className=\"value\" title={value.site} href={value.url}>\n              {value.url}\n            </a>\n          </span>\n        ))}\n      </p>\n    </header>\n  );\n};\n","import React from \"react\";\n\nexport const SkillsList = (props) => {\n  return (\n    <ul className=\"skills-list inlined-list\">\n      {props.skills.map((value, index) => (\n        <li key={index}>\n          <span className=\"skill-name\">{value}</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport const ToolsList = (props) => {\n  return (\n    <ul className=\"tools-list inlined-list\">\n      {props.tools.map((value, index) => (\n        <li key={index}>\n          <span className=\"tool-name\">{value}</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport const StrengthsList = (props) => {\n  return (\n    <ul className=\"strengths-list inlined-list\">\n      {props.strengths.map((value, index) => (\n        <li key={index}>\n          <span className=\"strength-name\">{value}</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\n\nexport const LanguageList = (props) => {\n  return (\n    <ul className=\"languages-list\">\n      {props.languages.map((value, index) => (\n        <li key={index}>\n          <span className=\"lang-name\">{value.language}</span>\n          <span className=\"lang-prof\">{value.proficiency}</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from \"react\";\nimport { SkillsList } from \"./SkillsList\";\nimport { ToolsList } from \"./ToolsList\";\nimport { StrengthsList } from \"./StrengthsList\";\nimport { LanguageList } from \"./LanguageList\";\n\nexport const SidebarMain = (props) => {\n  return (\n    <main>\n      <h2>Top Skills</h2>\n      <SkillsList skills={props.data.skills} />\n      <h2>Tools</h2>\n      <ToolsList tools={props.data.tools} />\n      <h2>Strengths</h2>\n      <StrengthsList strengths={props.data.strengths} />\n      <h2>Languages</h2>\n      <LanguageList languages={props.data.languages} />\n    </main>\n  );\n};\n","import React from \"react\";\nimport { SidebarHeader } from \"./SidebarHeader\";\nimport { SidebarMain } from \"./SidebarMain\";\n\nexport const SectionSidebar = (props) => {\n  return (\n    <section className=\"sidebar\">\n      <SidebarHeader contact={props.data.contact} />\n      <SidebarMain data={props.data} />\n    </section>\n  );\n};\n","import React, { Component } from \"react\";\r\nimport \"./normalize.css\";\r\nimport \"./App.css\";\r\nimport DataFile from \"./data/cv.json\";\r\n\r\nimport { SectionContent } from \"./components/SectionContent\";\r\nimport { SectionSidebar } from \"./components/SectionSidebar\";\r\n\r\n/**\r\n * App with render\r\n */\r\nclass AppRoot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      DataFile,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"approot\">\r\n        <SectionContent data={DataFile.data} />\r\n        <SectionSidebar data={DataFile.data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRoot;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}